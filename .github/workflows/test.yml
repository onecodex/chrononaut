name: test
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test-matrix:
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres:11.6
        env:
          POSTGRES_DB: chrononaut_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install virtualenv (Python2/3 compat)
        run: |
          pip install --progress-bar=off virtualenv
      - name: Cache virtualenv
        uses: actions/cache@v1
        id: cache-pip
        with:
          path: venv
          key: venv-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}-${{ matrix.python-version }}-${{ matrix.os }}
      - name: Install dependencies in a venv
        if: steps.cache-pip.outputs.cache-hit != 'true'
        run: |
          virtualenv venv
          . venv/bin/activate
          pip install -q -U pip
          pip install --progress-bar=off .
          pip install --progress-bar=off -r requirements.txt
      - name: Run all tests
        run: |
          . venv/bin/activate
          py.test tests/
